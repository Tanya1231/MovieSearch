// Generated by view binder compiler. Do not edit!
package com.example.moviesearch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.moviesearch.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final TextView detailsDescription;

  @NonNull
  public final FloatingActionButton detailsFabDownloadWp;

  @NonNull
  public final FloatingActionButton detailsFabFavorites;

  @NonNull
  public final FloatingActionButton detailsFabShare;

  @NonNull
  public final AppCompatImageView detailsPoster;

  @NonNull
  public final Toolbar detailsToolbar;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final CollapsingToolbarLayout toolbarLayout;

  private FragmentDetailsBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull TextView detailsDescription, @NonNull FloatingActionButton detailsFabDownloadWp,
      @NonNull FloatingActionButton detailsFabFavorites,
      @NonNull FloatingActionButton detailsFabShare, @NonNull AppCompatImageView detailsPoster,
      @NonNull Toolbar detailsToolbar, @NonNull ProgressBar progressBar,
      @NonNull CollapsingToolbarLayout toolbarLayout) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.detailsDescription = detailsDescription;
    this.detailsFabDownloadWp = detailsFabDownloadWp;
    this.detailsFabFavorites = detailsFabFavorites;
    this.detailsFabShare = detailsFabShare;
    this.detailsPoster = detailsPoster;
    this.detailsToolbar = detailsToolbar;
    this.progressBar = progressBar;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.details_description;
      TextView detailsDescription = ViewBindings.findChildViewById(rootView, id);
      if (detailsDescription == null) {
        break missingId;
      }

      id = R.id.details_fab_download_wp;
      FloatingActionButton detailsFabDownloadWp = ViewBindings.findChildViewById(rootView, id);
      if (detailsFabDownloadWp == null) {
        break missingId;
      }

      id = R.id.detailsFabFavorites;
      FloatingActionButton detailsFabFavorites = ViewBindings.findChildViewById(rootView, id);
      if (detailsFabFavorites == null) {
        break missingId;
      }

      id = R.id.detailsFabShare;
      FloatingActionButton detailsFabShare = ViewBindings.findChildViewById(rootView, id);
      if (detailsFabShare == null) {
        break missingId;
      }

      id = R.id.details_poster;
      AppCompatImageView detailsPoster = ViewBindings.findChildViewById(rootView, id);
      if (detailsPoster == null) {
        break missingId;
      }

      id = R.id.details_toolbar;
      Toolbar detailsToolbar = ViewBindings.findChildViewById(rootView, id);
      if (detailsToolbar == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar_layout;
      CollapsingToolbarLayout toolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (toolbarLayout == null) {
        break missingId;
      }

      return new FragmentDetailsBinding((CoordinatorLayout) rootView, appBar, detailsDescription,
          detailsFabDownloadWp, detailsFabFavorites, detailsFabShare, detailsPoster, detailsToolbar,
          progressBar, toolbarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
